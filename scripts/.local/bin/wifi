#!/bin/bash

###
# Control system wifi and VPN connections.

PROGRAM_NAME=$(basename $0) # This will be used in a few messages

function running_interactively { [ -t 0 ] && [ -t 2 ]; }

function say {
  if running_interactively ; then
    echo $@
  else
    echo $@ | xargs -I{} /usr/bin/notify-send "{}"
  fi
}

function print_help {
  printf "Usage:\t$PROGRAM_NAME [action] (action arguments ...)\n"
  printf "Available actions:\n"
  awk '/^  [a-zA-Z]*\)/ { \
    print substr($1, 0, index($1, ")")-1); \
    if (match(prev, /^  ## (.*)/)) { \
      printf "\t%s\n", substr(prev, RSTART + 5, RLENGTH); \
    } \
  } \
  { prev = $$0 } \' "${0}"
}

if [ -z "${1}" ]; then
  if running_interactively ; then
    print_help
  else
    notify-send "Run $PROGRAM_NAME from terminal for usage help."
  fi
  exit 1
fi

CMD="${1}"
MENU="fzf --sync --reverse --prompt ðŸ“¡ --header-lines 1 --color fg:242,bg:233,hl:65,fg+:15,bg+:234,hl+:108  --color info:108,prompt:109,spinner:108,pointer:168,marker:168"


case "${CMD}" in

  ## Connect to the specified network SSID.
  connect)
    SSID="${2}"
    if [ -z "${SSID}" ]; then
      SSID=$(nmcli dev wifi list | $MENU | sed 's/^\*\(.*\)/\1/' | tr -s ' ' | cut -f2 -d ' ')
    fi
    if [ -z "${SSID}" ]; then
      exit 1
    fi
    nmcli --ask dev wifi connect "${SSID}"
    say "Wifi connected to ${SSID}"
    ;;

  ## Disconnect from the specified network SSID.
  disconnect)
    SSID="${2}"
    if [ -z "${SSID}" ]; then
      echo "Please specify a connection."
      exit 1
    fi
    nmcli con down "${SSID}"
    say "Wifi disconnected"
    ;;

  ## Display saved network SSIDs or connect to one by name.
  saved)
    NAME="${2}"
    if [ -z "${NAME}" ]; then
      SSID=$(nmcli dev wifi list | $MENU | sed 's/^\*\(.*\)/\1/' | tr -s ' ' | cut -f2 -d ' ')
      nmcli con show
    else
      nmcli con up "${NAME}"
    fi
    ;;

  ## List available network SSIDs.
  list)
    nmcli dev wifi list
    ;;

  ## Details about current connections.
  detail)
    nmcli con show
    ;;

  ## Import, start, and stop OpenVPN profiles.
  vpn)
    VPN_CMD="${2}"
    if [ -z "${VPN_CMD}" ]; then
      echo "Please specify a VPN action: import | start | stop"
      exit 1
    fi
    case "${VPN_CMD}" in
      import)
        OVPN_FILE="${3}"
        if [ -z "${OVPN_FILE}" ]; then
          echo "Please specify an OVPN file!"
          exit 1
        fi
        if [ ! -f "${OVPN_FILE}" ]; then
          echo "OVPN file does not exist: ${OVPN_FILE}"
          exit 1
        fi
        nmcli connection import type openvpn file ${OVPN_FILE}
        ;;
      start)
        VPN_CON="${3}"
        if [ -z "${VPN_CON}" ]; then
          echo "Please specify a VPN connection!"
          exit 1
        fi
        nmcli con up "${VPN_CON}"
        ;;

      stop)
        VPN_CON="${3}"
        if [ -z "${VPN_CON}" ]; then
          echo "Please specify a VPN connection!"
          exit 1
        fi
        nmcli con down "${VPN_CON}"
        ;;
    esac
    ;;

esac

exit 0
